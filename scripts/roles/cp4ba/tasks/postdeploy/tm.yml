- name: Get OCP Apps domain
  ansible.builtin.include_role:
    name: common
    tasks_from: apps-endpoint
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_output_to_var: "apps_endpoint_domain"

# Based on https://www.ibm.com/docs/en/cpfs?topic=apis-oidc-registration#get2 (Get access token by using username and password)
- name: Get IAM access token
  ansible.builtin.uri:
    url: "https://cp-console.{{ apps_endpoint_domain }}/idprovider/v1/auth/identitytoken"
    method: POST
    headers:
      Content-Type: application/x-www-form-urlencoded;charset=UTF-8
    body_format: form-urlencoded
    body:
      grant_type: password
      username: "{{ ldap_configuration.lc_principal_admin_user }}"
      password: "{{ ldap_configuration.lc_principal_admin_password }}"
      scope: openid
    validate_certs: false
    status_code: 200
  register: admin_token_response

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-data/4.0?topic=resources-generating-authorization-token
- name: Exchange IAM access token for Zen token
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/v1/preauth/validateAuth"
    method: GET
    headers:
      iam-token: "{{ admin_token_response | json_query('json.access_token') }}"
      username: "{{ ldap_configuration.lc_principal_admin_user }}"
    validate_certs: false
    status_code: 200
  register: admin_token_response

- name: Navigator Logon
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/logon"
    method: POST
    body: "desktop=admin"
    force_basic_auth: true
    status_code: 200
    headers:
      Authorization: "Bearer {{ admin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: InternalIamRealm
      Content-Type: "application/x-www-form-urlencoded"
    validate_certs: false
    timeout: 60
    return_content: true
  register: login

- name: icn session
  ansible.builtin.set_fact:
    content: "{{ login.content[4:] }}"
    login_jsession: "{{ login.cookies['icn-JSESSIONID'] }}"
    cookie_jsessionid_name: icn-JSESSIONID

- name: Set Task Manager service URL
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/settings/default/taskManagerServiceURL"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value=https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/tm/api/v1"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ admin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Set Task manager log directory
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/settings/default/taskManagerLogDirectory"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value=/opt/ibm/viewerconfig/logs/"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ admin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Set Task manager administrator user ID
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/settings/default/taskManagerAdminUserId"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value={{ ldap_configuration.lc_principal_admin_user }}"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ admin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Set Task manager administrator password
  ansible.builtin.uri:
    url: "https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/jaxrs/api/admin/configuration/settings/default/taskManagerAdminPassword"
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value={{ cp4ba_universal_password }}"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ admin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"

- name: Enable Task Manager
  ansible.builtin.uri:
    url: >-
      https://cpd-{{ cp4ba_project_name }}.{{ apps_endpoint_domain }}/icn/navigator/
      jaxrs/api/admin/configuration/settings/default/taskManagerServiceEnabled
    method: POST
    return_content: true
    follow_redirects: all
    body: "desktop=admin&value=true"
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Connection: "keep-alive"
      Cookie: "{{ cookie_jsessionid_name }}={{ login_jsession }}"
      security_token: "{{ content.security_token }}"
      Authorization: "Bearer {{ admin_token_response.json | json_query('accessToken') }}"
      auth-token-realm: "InternalIamRealm"
    timeout: 60
  register: navigator_response
  failed_when: "'errors' in navigator_response.content"
