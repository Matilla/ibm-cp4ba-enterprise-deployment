- name: Create Global CA directory for generated files
  file:
    path: "{{ global_ca_output_directory }}"
    state: directory

- name: Generate & save Global CA if not provided
  block:
    - name: Generate an OpenSSL private key
      openssl_privatekey:
        path: "{{ global_ca_output_directory }}/global-ca.key"

    - name: Generate an OpenSSL Certificate Signing Request with Subject information
      openssl_csr:
        path: "{{ global_ca_output_directory }}/global-ca.csr"
        privatekey_path: "{{ global_ca_output_directory }}/global-ca.key"
        subject: "CN='Global CA'"
        basic_constraints: 
          - CA:TRUE
        basic_constraints_critical: true

    - name: Generate a Self Signed OpenSSL certificate
      openssl_certificate:
        path: "{{ global_ca_output_directory }}/global-ca.crt"
        privatekey_path: "{{ global_ca_output_directory }}/global-ca.key"
        csr_path: "{{ global_ca_output_directory }}/global-ca.csr"
        provider: selfsigned
        selfsigned_not_after: "+36500d"

    - name: Load TLS key data
      slurp:
        src: '{{ global_ca_output_directory }}/global-ca.key'
      register: slurped_key_data

    - name: Decode data and store as fact
      set_fact:
        _global_ca_key: "{{ slurped_key_data.content }}"

    - name: Load TLS crt data
      slurp:
        src: '{{ global_ca_output_directory }}/global-ca.crt'
      register: slurped_crt_data

    - name: Decode data and store as fact
      set_fact:
        _global_ca_crt: "{{ slurped_crt_data.content }}"

    - name: Prepare yaml file for Secret
      template:
        src: secret.yaml.j2
        dest: "{{ global_ca_output_directory }}/secret.yaml"

    - name: Add Secret
      k8s:
        api_key: "{{ mail_k8s_api_key | default(omit)}}"
        host: "{{mail_k8s_host | default(omit)}}"
        state: present
        force: True
        merge_type: merge
        namespace: automagic
        src: "{{ global_ca_output_directory }}/secret.yaml"
        wait: true
        wait_sleep: 15
        wait_timeout: 15    

  when: "global_ca_provided == false"

- name: Get OCP Apps domain
  include_role:
    name: apps-endpoint
  vars:
    apps_endpoint_k8s_api_key: "{{ global_ca_k8s_api_key | default(omit) }}"
    apps_endpoint_k8s_host: "{{ global_ca_k8s_host | default(omit) }}"

- name: Generate an OpenSSL private key
  openssl_privatekey:
    path: "{{ global_ca_output_directory }}/wildcard.key"

- name: Generate an OpenSSL Certificate Signing Request with Subject information
  openssl_csr:
    path: "{{ global_ca_output_directory }}/wildcard.csr"
    privatekey_path: "{{ global_ca_output_directory }}/wildcard.key"
    subject: "CN=Wildcard"
    subject_alt_name: "DNS:*.{{ apps_endpoint_domain }}"

- name: Generate a Self Signed OpenSSL certificate
  openssl_certificate:
    path: "{{ global_ca_output_directory }}/wildcard.crt"
    privatekey_path: "{{ global_ca_output_directory }}/wildcard.key"
    csr_path: "{{ global_ca_output_directory }}/wildcard.csr"
    provider: ownca
    ownca_path: "{{ global_ca_output_directory }}/global-ca.crt"
    ownca_privatekey_path: "{{ global_ca_output_directory }}/global-ca.key"
    ownca_not_after: "+36500d"
