- name: Create DB2 directory for generated files
  file:
    path: "{{ db2_output_directory }}"
    state: directory
    mode: u+rwx

- name: Prepare yaml file for Project
  template:
    src: project.yaml.j2
    dest: "{{ db2_output_directory }}/project.yaml"
    mode: u+rwx

- name: Add Project
  k8s:
    api_key: "{{ db2_k8s_api_key | default(omit) }}"
    host: "{{ db2_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ db2_output_directory }}/project.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for Project
  k8s_info:
    api_key: "{{ db2_k8s_api_key | default(omit) }}"
    host: "{{ db2_k8s_host | default(omit) }}"
    api_version: project.openshift.io/v1
    kind: Project
    name: db2
  register: project
  retries: 10
  delay: 1
  until: ('Active' in project | json_query(phase_query) | unique)
  vars:
    phase_query: 'resources[*].status.phase'

- block:

    - name: Prepare yaml for No Root Squash DB2 Service Account for NFS on IBM Cloud
      template:
        src: service-account.yaml.j2
        dest: "{{ db2_output_directory }}/service-account.yaml"
        mode: u+rwx

    - name: Add No Root Squash DB2 Service Account for NFS on IBM Cloud
      k8s:
        api_key: "{{ db2_k8s_api_key | default(omit) }}"
        host: "{{ db2_k8s_host | default(omit ) }}"
        state: present
        force: false
        merge_type: merge
        src: "{{ db2_output_directory }}/service-account.yaml"
        wait: true
        wait_sleep: 15
        wait_timeout: 15

    - name: Prepare yaml for No Root Squash DB2 Role Binding for NFS on IBM Cloud
      template:
        src: privileged-scc-clusterrolebinding.yaml.j2
        dest: "{{ db2_output_directory }}/privileged-scc-clusterrolebinding.yaml"
        mode: u+rwx

    - name: Add No Root Squash DB2 Role Binding for NFS on IBM Cloud
      k8s:
        api_key: "{{ db2_k8s_api_key | default(omit) }}"
        host: "{{ db2_k8s_host | default(omit ) }}"
        state: present
        force: true
        merge_type: merge
        src: "{{ db2_output_directory }}/privileged-scc-clusterrolebinding.yaml"
        wait: true
        wait_sleep: 15
        wait_timeout: 15

    - name: Prepare yaml for No Root Squash DB2 Daemon Set
      template:
        src: daemon-set.yaml.j2
        dest: "{{ db2_output_directory }}/daemon-set.yaml"
        mode: u+rwx

    - name: Add No Root Squash DB2 Daemon Set
      k8s:
        api_key: "{{ db2_k8s_api_key | default(omit) }}"
        host: "{{ db2_k8s_host | default(omit ) }}"
        state: present
        force: false
        merge_type: merge
        src: "{{ db2_output_directory }}/daemon-set.yaml"
        wait: true
        wait_sleep: 15
        wait_timeout: 60

  when: db2_deployment_platform == "ROKS"

- name: Prepare yaml file for the Operator Group
  template:
    src: operatorgroup.yaml.j2
    dest: "{{ db2_output_directory }}/operatorgroup.yaml"
    mode: u+rwx

- name: Add the Operator Group
  k8s:
    api_key: "{{ db2_k8s_api_key | default(omit) }}"
    host: "{{ db2_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ db2_output_directory }}/operatorgroup.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Prepare yaml file for the Operator Subscription
  template:
    src: subscription.yaml.j2
    dest: "{{ db2_output_directory }}/subscription.yaml"
    mode: u+rwx

- name: Add the Operator Subscription
  k8s:
    api_key: "{{ db2_k8s_api_key | default(omit) }}"
    host: "{{ db2_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ db2_output_directory }}/subscription.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Manage Manual Operator common-service
  include_role:
    name: manage-manual-operator
  vars:
    manage_manual_operator_k8s_api_key: "{{ db2_k8s_api_key | default(omit)  }}"
    manage_manual_operator_k8s_host: "{{ db2_k8s_host | default(omit) }}"
    manage_manual_operator_namespace: db2
    manage_manual_operator_subscription: db2u-operator
    manage_manual_operator_deployment: db2u-operator-manager

- name: Wait for DB2uCluster CRD to be Established
  include_role:
    name: wait-crd
  vars:
    wait_crd_k8s_api_key: "{{ db2_k8s_api_key | default(omit)  }}"
    wait_crd_k8s_host: "{{ db2_k8s_host | default(omit) }}"
    wait_crd_name: db2uclusters.db2u.databases.ibm.com

- name: Set Docker Registry Json
  set_fact:
    docker_registry_json: '{{ {"auths": {"cp.icr.io": {"username": "cp", "password": db2_icr_password} }} | to_json | b64encode }}'

- name: Prepare yaml file for Docker Registry Secret
  template:
    src: docker-secret.yaml.j2
    dest: "{{ db2_output_directory }}/docker-secret.yaml"
    mode: u+rwx

- name: Add the Docker Registry Secret
  k8s:
    api_key: "{{ db2_k8s_api_key | default(omit) }}"
    host: "{{ db2_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ db2_output_directory }}/docker-secret.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

# Based on LI at http://www-03.ibm.com/software/sla/sladb.nsf/doclookup/F2925E0D5C24EAB4852586FE0060B3CC?OpenDocument
# DB2 Standard Edition is a supporting program with limitation of 16 CPU and 128 Memory
- name: Prepare yaml file for DB2uCluster Instance
  template:
    src: db2ucluster.yaml.j2
    dest: "{{ db2_output_directory }}/db2ucluster.yaml"
    mode: u+rwx

- name: Add the DB2uCluster Instance
  k8s:
    api_key: "{{ db2_k8s_api_key | default(omit) }}"
    host: "{{ db2_k8s_host | default(omit) }}"
    state: present
    force: false
    merge_type: merge
    src: "{{ db2_output_directory }}/db2ucluster.yaml"
    wait: true
    wait_sleep: 15
    wait_timeout: 15

- name: Wait for the DB2uCluster Instance Ready State
  k8s_info:
    api_key: "{{ db2_k8s_api_key | default(omit) }}"
    host: "{{ db2_k8s_host | default(omit) }}"
    api_version: db2u.databases.ibm.com/v1
    kind: Db2uCluster
    name: db2ucluster
    namespace: db2
  register: db2ucluster
  retries: 60
  delay: 15
  until: ('Ready' in db2ucluster | json_query(state_query) | unique)
  vars:
    state_query: 'resources[*].status.state'

- name: Delete BLUDB to tidy up the DB2 memory space
  kubernetes.core.k8s_exec:
    api_key: "{{ db2_k8s_api_key | default(omit) }}"
    host: "{{ db2_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: |
      su - db2inst1
      sleep 30 #for db2start to finish
      db2 deactivate db BLUDB
      db2 force application ALL
      sleep 60 #for force aplication to finish
      db2 drop db BLUDB
  register: command_status
  ignore_errors: true

- name: Debug Print Command Status
  debug:
    msg: "Command Status: {{ command_status }}"
  when: command_status.rc != 0
